module_name = 'Readium'

# ------------------------------------------------------------------------------------------------------------------------
#  Generated by jasmine
# ------------------------------------------------------------------------------------------------------------------------

begin
  require 'jasmine'
  load 'jasmine/tasks/jasmine.rake'
rescue LoadError
  task :jasmine do
    abort "Jasmine is not available. In order to run jasmine, you must: (sudo) gem install jasmine"
  end
end


module_dir = File.dirname(__FILE__)
src_dir = "#{module_dir}/src"
out_dir = "#{module_dir}/out"
module_file_name = module_name

task :default => [:gen_module]

require 'rake/clean'

CLEAN.include(out_dir)

directory out_dir

desc "generate #{module_name} module"
task :gen_module => ['epub_cfi:gen_module', 'epub_fetch:gen_module', 'epub:gen_module', 'epub_renderer:gen_module', 'epub_ers:gen_module', 'clean', out_dir] do

  optimizer_file_path = "#{module_dir}/../../build/r.js"
  r_build_config="#{module_dir}/build.js"

  sh "node #{optimizer_file_path} -o #{r_build_config} name=#{module_file_name} baseUrl=#{src_dir} optimize=none"\
  " out=#{out_dir}/#{module_file_name}.js"

  sh "node #{optimizer_file_path} -o #{r_build_config} name=#{module_file_name} baseUrl=#{src_dir}"\
  " out=#{out_dir}/#{module_file_name}.min.js"

  # almond path MUST be in a relative form, it will have baseUrl appended at the beginning:
  almond_file_path = "../../../build/almond"

  sh "node #{optimizer_file_path} -o #{r_build_config} baseUrl=#{src_dir} optimize=none"\
    " name=#{almond_file_path} include=define-sync,#{module_file_name}"\
    " wrap.startFile=#{module_dir}/wrap-sync-start.frag wrap.endFile=#{module_dir}/wrap-sync-end.frag"\
    " out=#{out_dir}/#{module_file_name}.syncload.js"

  sh "node #{optimizer_file_path} -o #{r_build_config} baseUrl=#{src_dir}"\
    " name=#{almond_file_path} include=define-sync,#{module_file_name}"\
    " wrap.startFile=#{module_dir}/wrap-sync-start.frag wrap.endFile=#{module_dir}/wrap-sync-end.frag"\
    " out=#{out_dir}/#{module_file_name}.syncload.min.js"

end

namespace "epub_cfi" do
  load "#{module_dir}/../epub-cfi/Rakefile"
end

namespace "epub_fetch" do
  load "#{module_dir}/../epub-fetch/Rakefile"
end

namespace "epub" do
  load "#{module_dir}/../epub/Rakefile"
end

namespace "epub_ers" do
  load "#{module_dir}/../epub-ers/Rakefile"
end

namespace "epub_renderer" do
  load "#{module_dir}/../epub-renderer/Rakefile"
end
